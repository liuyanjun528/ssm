<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	 <!-- 自动扫描 -->   
    <context:component-scan base-package="com.springboot">
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
	 <!-- 引入配置文件 -->  
  	<context:property-placeholder location="classpath:db.properties"/>
	<!-- 数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"> 
        <property name="driverClass" value="${jdbc.driverClass}" />  
        <property name="jdbcUrl" value="${jdbc.url}" />  
        <property name="user" value="${jdbc.user}" />  
        <property name="password" value="${jdbc.password}" />  
	</bean>
	
	 <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
       
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
      	<property name="configLocation" value="classpath:mybatis-config.xml"></property>     
    </bean>
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.springboot.mapper" />
      <!--   <property name="sqlSessionFactoryBeanName"  value="sqlSessionFactory"></property>   -->
        
    </bean> 
     
    
     <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>
    <!-- 开启事务控制的注解支持 -->  
  	<tx:annotation-driven transaction-manager="transactionManager"/>
  	
  	<!-- AOP事物切面配置 事物增强，事物如何处理  并指定事物管理器-->  
	<!-- <tx:advice id="advice" transaction-manager="transactionManager">  
	    <tx:attributes>  
	        <tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>  
	        <tx:method name="insert" propagation="REQUIRED" read-only="false"/>  
	    </tx:attributes>  
	</tx:advice>   -->
  	<!--配置切点    *任意访问修饰符，包下的所有方法，任意参数。都作为切入点 -->
	<!-- <aop:config>  
	    <aop:pointcut id="testService" expression="execution (* com.my.ssm.service.*(..))"/>  
	    <aop:advisor advice-ref="advice" pointcut-ref="testService"/>  
	</aop:config>   -->

</beans>
