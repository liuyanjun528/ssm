<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.mapper.LoginUserMapper">
  <resultMap id="BaseResultMap" type="com.springboot.entity.LoginUser">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="passWord" jdbcType="VARCHAR" property="password" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="hobby" jdbcType="VARCHAR" property="hobby" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="code" jdbcType="VARCHAR" property="code" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userName, `passWord`, age, hobby, createTime, code
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from loginuser
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from loginuser
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.springboot.entity.LoginUser">
    insert into loginuser (id, userName, `passWord`, 
      age, hobby, createTime, 
      code)
    values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{hobby,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{code,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.springboot.entity.LoginUser">
    insert into loginuser
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="password != null">
        `passWord`,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="hobby != null">
        hobby,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="code != null">
        code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="hobby != null">
        #{hobby,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.entity.LoginUser">
    update loginuser
    <set>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `passWord` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="hobby != null">
        hobby = #{hobby,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.entity.LoginUser">
    update loginuser
    set userName = #{username,jdbcType=VARCHAR},
      `passWord` = #{password,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      hobby = #{hobby,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      code = #{code,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>